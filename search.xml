<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Install Arch Linux</title>
      <link href="/2021-02-12/install-arch-linux/"/>
      <url>/2021-02-12/install-arch-linux/</url>
      
        <content type="html"><![CDATA[<h1 id="Arch-Linux-安装过程"><a href="#Arch-Linux-安装过程" class="headerlink" title="Arch Linux 安装过程"></a>Arch Linux 安装过程</h1><ol><li>Arch Linux 简单介绍（官网、Wiki等）</li><li>Arch Linux 安装过程（Vmware为例）</li><li>安装过程中的一些总结</li></ol><a id="more"></a><h2 id="一、Arch-Linux-简单介绍"><a href="#一、Arch-Linux-简单介绍" class="headerlink" title="一、Arch Linux 简单介绍"></a>一、Arch Linux 简单介绍</h2><blockquote><p>Arch Linux 是一款基于 x86-64 架构的 Linux发行版 。<br>系统主要由自由和开源软件组成，支持社区参与。系统设计以 KISS原则（保持简单和愚蠢）为总体指导原则，注重代码正确、优雅和极简主义，期待用户愿意去理解系统的运作。Arch Linux 采用pacman作为默认的软件包管理器。Arch Linux 采用滚动发行模式。Arch Linux 以社区 Wiki 的形式提供文档，称为 ArchWiki。</p></blockquote><p>Arch Linux<a href="https://www.archlinux.org/" target="_blank" rel="noopener">官方网站</a> </p><p>Arch Linux <a href="https://wiki.archlinux.org/" target="_blank" rel="noopener">Wiki</a></p><p>Arch Linux<a href="https://www.archlinuxcn.org/" target="_blank" rel="noopener">中文社区</a></p><h2 id="二、Arch-Linux-安装过程"><a href="#二、Arch-Linux-安装过程" class="headerlink" title="二、Arch Linux 安装过程"></a>二、Arch Linux 安装过程</h2><p>Arch Linux 并不是适合Linux新手的发行版，相较于其他发行版有图形界面引导的流程化的安装过程，Arch Linux安装过程对新手相对不友好。但通过这个安装过程可以提升对Linux的了解与掌握程度。</p><p>安装目标是装好最简单的一个带有桌面的 Arch Linux(以Vmware为例).</p><h3 id="2-1-安装前的准备"><a href="#2-1-安装前的准备" class="headerlink" title="2.1 安装前的准备"></a>2.1 安装前的准备</h3><h4 id="2-1-1-下载镜像："><a href="#2-1-1-下载镜像：" class="headerlink" title="2.1.1 下载镜像："></a>2.1.1 下载镜像：</h4><p>官方<a href="https://www.archlinux.org/download/" target="_blank" rel="noopener">下载地址</a></p><p>国内镜像地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/" target="_blank" rel="noopener">清华大学开源软件镜像站</a>、<a href="http://mirrors.163.com/archlinux/iso/" target="_blank" rel="noopener">网易开源镜像站</a></p><p>这里下载的是archlinux-2020.09.01-x86_64.iso</p><p>校验文件完整性：</p><p>官网给出的MD5和SHA1：</p><ul><li><strong>MD5：</strong> ebcdb2223a77f098af3923fe1fa180aa</li><li><strong>SHA1：</strong> 95ebacd83098b190e8f30cc28d8c57af0d0088a0</li></ul><p>Windows下查看文件MD5和SHA1：</p><p>CertUtil -hashfile 文件名 [ Hash算法 ] （默认为SHA1，要大写）</p><p><img alt="Hash" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/Hash.png"></p><p>完整性检验完成。</p><h4 id="2-1-2-创建虚拟机："><a href="#2-1-2-创建虚拟机：" class="headerlink" title="2.1.2 创建虚拟机："></a>2.1.2 创建虚拟机：</h4><p>使用Vmware workstation虚拟机来安装Arch Linux，首先新建一个虚拟机，为Arch Linux了分配了1G内存和10G的硬盘，配置允许的话可以使用更大的内存和硬盘空间。</p><p><img alt="00" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/00.png"></p><img alt="01" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/01.png"><p><img alt="02" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/02.png"></p><p>VMWare在新建虚拟机选择系统时是没有Arch Linux的选项的，这里我选择的是“其他Linux 5.x或更高版本内核 64位”。</p><p><img alt="03" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/03.png"></p><p><img alt="04" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/04.png"></p><p><img alt="05" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/05.png"></p><p>在虚拟机中设置下载好的ISO映像文件的路径，即”使用 ISO 映像文件（M）“—-&gt;浏览选择之前下载好的镜像文件。</p><p><img alt="06" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/06.png"></p><p>在“虚拟机-&gt;设置-&gt;选项-&gt;高级”中勾选”通过UEFI“选项；</p><p>注意：安装映像使用 systemd-boot 在 UEFI 模式下引导，使用 syslinux 在 BIOS 模式下引导。</p><blockquote><p><strong>systemd-boot</strong> (以前被称为<strong>gummiboot</strong>) 是可以执行 EFI 镜像文件的简单 UEFI 启动管理器。启动的内容可以通过一个配置(glob)或者屏幕菜单选择。Arch 默认安装的 <a href="https://www.archlinux.org/packages/?name=systemd" target="_blank" rel="noopener">systemd</a> 提供了这个功能。</p></blockquote><h4 id="2-1-3-启动到-Live-环境："><a href="#2-1-3-启动到-Live-环境：" class="headerlink" title="2.1.3 启动到 Live 环境："></a>2.1.3 启动到 Live 环境：</h4><p>在vmware开启刚刚创建的虚拟机</p><p><img alt="07" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/07.png"></p><p>使用EFI引导时的启动界面如上图，选择第一项启动。</p><p>以 root 身份登录进一个虚拟控制台，默认的 Shell 是 Zsh</p><p><img alt="image-20201011165951263" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011165951263.png"></p><h4 id="2-1-4-验证启动模式"><a href="#2-1-4-验证启动模式" class="headerlink" title="2.1.4 验证启动模式"></a>2.1.4 验证启动模式</h4><p>ls /sys/firmware/efi/efivars</p><p><img alt="image-20201011170537003" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011170537003.png"></p><p>如果命令没有错误地显示了目录，则系统以 UEFI 模式启动。<br>如果提示ls: cannot access ‘/sys/firmware/efi/efivars’: No such file or directory表明是以BIOS方式引导。</p><h4 id="2-1-5-连接到因特网"><a href="#2-1-5-连接到因特网" class="headerlink" title="2.1.5 连接到因特网"></a>2.1.5 连接到因特网</h4><p>Arch Linux并不能离线安装，因为需要联网来下载需要的组件，所以首先要连接网络。</p><p>由于Arch Linux在启动后，守护进程dhcpcd已被默认启用以探测有线设备，如果是在真机上安装的话，请确保使用的是有线网络。</p><p>有线网络：dhcpcd</p><p>systemctl restart dhcpcd</p><p>无线网络：iwctl </p><p>device list</p><p>ping命令检查网络连接是否正常：</p><p><img alt="image-20201011172142207" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011172142207.png"></p><h4 id="2-1-6-更新系统时间"><a href="#2-1-6-更新系统时间" class="headerlink" title="2.1.6 更新系统时间"></a>2.1.6 更新系统时间</h4><p>timedatectl set-ntp true</p><p>正常情况下这个命令没有输出，ntp服务会每隔一段时间进行一次网络对时</p><h4 id="2-1-7-建立硬盘分区"><a href="#2-1-7-建立硬盘分区" class="headerlink" title="2.1.7 建立硬盘分区"></a>2.1.7 建立硬盘分区</h4><p>查看当前的分区情况<br>fdisk -l或者lsblk</p><p><img alt="image-20201011172903662" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011172903662.png"></p><p>结果中以 rom，loop 或者 airoot 结束的可以被忽略；</p><p>sda即是我分配给虚拟机的10GB硬盘，因为sda节点下无任何显示，所以此硬盘还没有分区；loop0和sr0可以忽略。</p><p>以下的分区是必须要有的：</p><p>一个根分区（挂载在根目录）/；<br>要在 UEFI 模式中启动，还需要一个 EFI 系统分区。</p><p>对这10GB的硬盘进行分区，能够创建分区的命令很多，如fdisk，parted，cfdisk等</p><p>前面设置的是EFI引导，因此需要在此处需分一个EFI分区（EFI分区推荐大小为512MB）。使用cfdisk分区命令后进入分区界面：</p><p><img alt="image-20201011174048189" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011174048189.png"></p><p>选择gpt分区表，进入之后，划分3个必要分区，分别为根分区，EFI系统分区，Swap分区。</p><p><img alt="image-20201011202355279" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011202355279.png"></p><p><img alt="image-20201011202446726" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011202446726.png"></p><p><img alt="image-20201011202903372" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011202903372.png"></p><p>分区好之后，选择write生效；输入yes，选择exit即可退出。</p><p>再次使用lsblk查看一下：</p><p><img alt="image-20201011202944109" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011202944109.png"></p><h4 id="2-1-8-格式化分区"><a href="#2-1-8-格式化分区" class="headerlink" title="2.1.8 格式化分区"></a>2.1.8 格式化分区</h4><p>分区完成后，需要对分区做格式化处理，由于这里使用了EFI分区，因为EFI分区需要FAT32文件格式，所以需要将其格式化为FAT32格式；根分区格式化为ext4格式；设置并开启Swap分区；</p><p>mkfs.fat -F32 /dev/sda1<br>mkfs.ext4 /dev/sda2</p><p>初始化交换分区：<br>mkswap /dev/sda3 -L Swap<br>swapon /dev/sda3</p><h4 id="2-1-9-挂载分区"><a href="#2-1-9-挂载分区" class="headerlink" title="2.1.9 挂载分区"></a>2.1.9 挂载分区</h4><p>格式话完成后，需要将分区挂载到 /mnt ，先挂载根分区（此例为/dev/sda2）；然后使用 mkdir创建其他剩余的挂载点（比如 /mnt/efi）并挂载其相应的分区，再挂载EFI分区（这里是/dev/sda1），<br>挂载EFI分区时，需要在/mnt上先创建 boot/EFI 目录，然后将EFI分区挂载到/mnt/boot/EFI上；Sawp分区不需要挂载；</p><p>mount /dev/sdaX /mnt  （sdaX改为自己的根分区 ）<br>mkdir -p /mnt/boot/EFI<br>mount /dev/sda1 /mnt/boot/EFI</p><p><img alt="image-20201011204425716" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011204425716.png"></p><h3 id="2-2-安装"><a href="#2-2-安装" class="headerlink" title="2.2 安装"></a>2.2 安装</h3><h4 id="2-2-1-选择镜像"><a href="#2-2-1-选择镜像" class="headerlink" title="2.2.1 选择镜像"></a>2.2.1 选择镜像</h4><p>文件 /etc/pacman.d/mirrorlist 定义了软件包会从哪个镜像源下载；尽量选择国内的镜像源，否则，因为国内网络环境的关系，选择其他国家或地区的镜像源，安装时可能很慢或失败。</p><p>reflector 会通过选择最近一个小时已同步的 HTTPS 镜像并按下载速率对其进行排序来更新镜像列表。在列表中越前的镜像在下载软件包时有越高的优先权。</p><p><img alt="image-20201011214725734" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011214725734.png"></p><h4 id="2-2-2-安装必须的软件包"><a href="#2-2-2-安装必须的软件包" class="headerlink" title="2.2.2 安装必须的软件包"></a>2.2.2 安装必须的软件包</h4><p>使用 pacstrap 脚本，安装 base 软件包和 Linux 内核以及常规硬件的固件：<br>pacstrap /mnt base linux linux-firmware</p><p><strong>注意：</strong></p><ul><li>可以将 <a href="https://www.archlinux.org/packages/?name=linux" target="_blank" rel="noopener">linux</a> 替换为 <a href="https://wiki.archlinux.org/index.php/Kernel" target="_blank" rel="noopener">kernel</a> 页面中介绍的内核软件包。</li><li>在虚拟机或容器中安装时，可以不安装固件软件包。</li></ul><p><a href="https://www.archlinux.org/packages/?name=base" target="_blank" rel="noopener">base</a> 软件包并没有包含 Live 环境中的全部程序。因此要获得一个功能齐全的基本系统，可能需要安装其他软件包。特别要考虑安装：</p><ul><li>管理所用<a href="https://wiki.archlinux.org/index.php/File_systems" target="_blank" rel="noopener">文件系统</a>的用户工具；</li><li>访问 <a href="https://wiki.archlinux.org/index.php/RAID" target="_blank" rel="noopener">RAID</a> 或 <a href="https://wiki.archlinux.org/index.php/LVM" target="_blank" rel="noopener">LVM</a> 分区的工具；</li><li>未包含在 <a href="https://www.archlinux.org/packages/?name=linux-firmware" target="_blank" rel="noopener">linux-firmware</a> 中的额外固件；</li><li><a href="https://wiki.archlinux.org/index.php/Networking" target="_blank" rel="noopener">联网</a> 所需要的程序；</li><li><a href="https://wiki.archlinux.org/index.php/Text_editor" target="_blank" rel="noopener">文本编辑器</a>；</li><li>访问 <a href="https://wiki.archlinux.org/index.php/Man" target="_blank" rel="noopener">man</a> 和 <a href="https://wiki.archlinux.org/index.php/Info" target="_blank" rel="noopener">info</a> 页面的工具：<a href="https://www.archlinux.org/packages/?name=man-db" target="_blank" rel="noopener">man-db</a>, <a href="https://www.archlinux.org/packages/?name=man-pages" target="_blank" rel="noopener">man-pages</a> 和 <a href="https://www.archlinux.org/packages/?name=texinfo" target="_blank" rel="noopener">texinfo</a>。</li></ul><p>pacstrap /mnt base linux linux-firmware dhcpcd vim man-db man-pages texinfo lvm2 xfsprogs</p><h3 id="2-3-配置系统"><a href="#2-3-配置系统" class="headerlink" title="2.3 配置系统"></a>2.3 配置系统</h3><h4 id="2-3-1-Fstab"><a href="#2-3-1-Fstab" class="headerlink" title="2.3.1 Fstab"></a>2.3.1 Fstab</h4><p>用以下命令生成 fstab 文件 (用 -U 或 -L 选项设置UUID 或卷标)：<br>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab<br>强烈建议在执行完以上命令后，后检查一下生成的 /mnt/etc/fstab 文件是否正确：<br>nano /mnt/etc/fstab<br>如果生成的fstab文件正确，会看到之前分的分区的信息。</p><p><img alt="image-20201011220655081" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011220655081.png"></p><h4 id="2-3-2-Chroot"><a href="#2-3-2-Chroot" class="headerlink" title="2.3.2 Chroot"></a>2.3.2 Chroot</h4><p>Chroot意为Change root，相当于把操纵权交给我们新安装（或已经存在）的Linux系统，执行了这步以后，我们的操作都相当于在磁盘上新装的系统中进行。<br>Change root 到新安装的系统：<br>arch-chroot /mnt<br>chroot之后，当前目录就变成为 / 。此步会自动进行创建初始的ramdisk环境。</p><h4 id="2-3-3-时区"><a href="#2-3-3-时区" class="headerlink" title="2.3.3 时区"></a>2.3.3 时区</h4><p>设置时区：</p><p># ln -sf /usr/share/zoneinfo/Region/City /etc/localtime<br>例如：<br>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br>设置时间标准为UTC，并调整时间漂移：<br>hwclock –systohc –utc<br>运行 hwclock以生成 /etc/adjtime：<br>hwclock –systohc</p><p><img alt="image-20201011221523214" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011221523214.png"></p><p><img alt="image-20201011221529701" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011221529701.png"></p><h4 id="2-3-4-本地化"><a href="#2-3-4-本地化" class="headerlink" title="2.3.4 本地化"></a>2.3.4 本地化</h4><p>本地化的程序与库若要本地化文本，都依赖 Locale，后者明确规定地域、货币、时区日期的格式、字符排列方式和其他本地化标准。<br>需在这两个文件设置：locale.gen 与 locale.conf。<br>编辑/etc/locale.gen 然后移除需要的地区前的注释符号 #。<br>vim /etc/locale.gen<br>然后找到下面3项，去掉每项前面的#即可：<br>en_US.UTF-8 UTF-8<br>zh_CN.UTF-8 UTF-8<br>zh_TW.UTF-8 UTF-8<br>接着执行 locale-gen 以生成 locale 信息：<br>locale-gen<br>并列出所有启用的Locale：<br>locale -a<br>然后创建 locale.conf 文件，并编辑设定 LANG 变量，比如：<br>vim /etc/locale.conf<br>在文件的第一行加入以下内容：<br>LANG=en_US.UTF-8<br>保存并退出。</p><p><img alt="image-20201011224203465" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011224203465.png"></p><p><img alt="image-20201011225421731" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011225421731.png"></p><p>/etc/locale.conf用来配置整个系统所使用的Loacle，而这也可以由用户通过用户自己的 ~/.config/locale.conf （~表示当前用户的Home目录）来覆盖整个系统的Locale配置。</p><p><strong>警告： 不推荐在此设置任何中文 locale，会导致 tty 乱码。</strong></p><h4 id="2-3-5-网络配置"><a href="#2-3-5-网络配置" class="headerlink" title="2.3.5 网络配置"></a>2.3.5 网络配置</h4><p>创建 hostname 文件:<br>vim /etc/hostname<br>在文件的第一行输入你自己设定的一个myhostname<br>保存并退出。<br>编辑/etc/hosts文件：<br>127.0.0.1    localhost<br>::1        localhost<br>127.0.1.1    myhostname.localdomain    myhostname<br>将myhostname替换成你自己设定的主机名<br>我这里是arch-Linux.</p><p><img alt="image-20201011225947669" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011225947669.png"></p><p><img alt="image-20201011225956653" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011225956653.png"></p><p>对新安装的系统，需要再次<a href="https://wiki.archlinux.org/index.php/Network_configuration_(简体中文)" target="_blank" rel="noopener">设置网络</a>，请注意，目前的 <a href="https://www.archlinux.org/packages/?name=base" target="_blank" rel="noopener">base</a> 不含有任何网络管理工具，要安装希望使用的 <a href="https://wiki.archlinux.org/index.php/Network_management" target="_blank" rel="noopener">网络管理</a> 软件。</p><p>利用包管理工具<code>pacman</code>，大部分情况下，一行命令就可以搞定包与依赖的问题。</p><p>安装包的命令格式为<code>pacman -S 包名</code>，<code>pacman</code>会自动检查这个包所需要的其他包（即为依赖）并一起装上。</p><p>pacman -S dhcpcd</p><p>systemctl enable dhcpcd.service</p><h4 id="2-3-6-Root-密码"><a href="#2-3-6-Root-密码" class="headerlink" title="2.3.6 Root 密码"></a>2.3.6 Root 密码</h4><p>设置 Root 密码：<br>passwd<br>输入两次密码（Linux不显示密码）</p><p><img alt="image-20201011230845907" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011230845907.png"></p><h4 id="2-3-7-安装引导程序"><a href="#2-3-7-安装引导程序" class="headerlink" title="2.3.7 安装引导程序"></a>2.3.7 安装引导程序</h4><p>需要安装 Linux 引导加载程序,才能在安装后启动系统，可以使用的的引导程序已在 启动加载器中列出，请选择一个安装并配置它，GRUB 是最常见的选择。<br>安装grub：<br>　　grub是一个启动引导器，同时支持EFI和BIOS方式的启动。若使用的UEFI方式引导系统，则还需要安装efibootmgr，如果是双系统的话，还需要安装os-prober，且如果使用Intel CPU的话，则需要安装 intel-ucode 并启用因特尔微码更新。<br>此处使用的是虚拟机和UEFI引导方式，因此只需要安装grub和efibootmgr：<br>pacman -S grub efibootmgr</p><p>然后，还需要将其安装到EFI分区当中：<br>grub-install –recheck /dev/sda<br>最后还需要生成一个grub的配置文件：<br>grub-mkconfig -o /boot/grub/grub.cfg</p><p><img alt="image-20201011231448410" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011231448410.png"></p><p><img alt="image-20201011231519667" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011231519667.png"></p><p><strong>警告： 这是安装的最后但也至关重要的一步，请按上述指引正确安装好引导加载程序后再重新启动。否则将无法正常进入系统。</strong></p><h4 id="2-3-8-重启"><a href="#2-3-8-重启" class="headerlink" title="2.3.8 重启"></a>2.3.8 重启</h4><p>输入 exit 或按 Ctrl+d 退出 chroot 环境<br>可选用 umount -R /mnt 手动卸载被挂载的分区：这有助于发现任何「繁忙」的分区，并通过 fuser 查找原因。<br>最后，通过执行 reboot 重启系统，systemd 将自动卸载仍然挂载的任何分区。不要忘记移除安装介质，然后使用 root 帐户登录到新系统。</p><p>exit<br>umount -R /mnt<br>reboot</p><p><img alt="image-20201011231820778" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011231820778.png"></p><p><img alt="image-20201011231834090" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011231834090.png"></p><p>重启系统之后，会出现如上启动界面<br>选择第一个就进入到我们新安装的Arch Linux了，如下图：</p><p><img alt="image-20201011231901836" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011231901836.png"></p><p>使用 root 帐户，再输入之前设置的密码登录到新系统；Arch Linux的基础系统安装完成了。<br>由于还没有安装桌面，所以登陆后处在命令行模式。</p><p><img alt="image-20201011231926660" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201011231926660.png"></p><h3 id="2-4-安装后的配置与图形界面"><a href="#2-4-安装后的配置与图形界面" class="headerlink" title="2.4 安装后的配置与图形界面"></a>2.4 安装后的配置与图形界面</h3><h4 id="2-4-1连接网络"><a href="#2-4-1连接网络" class="headerlink" title="2.4.1连接网络"></a>2.4.1连接网络</h4><p>dhcpcd</p><p>同样可以使用<code>ping</code>命令来测试是否正常联网。</p><p><img alt="image-20201012005903150" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012005903150.png"></p><h4 id="2-4-2-新建用户"><a href="#2-4-2-新建用户" class="headerlink" title="2.4.2 新建用户"></a>2.4.2 新建用户</h4><p>root的权限过高，日常使用root用户是不安全的。Linux为我们提供了强大的用户与组的权限管理，提高了整个系统的安全性。这里我们就来新建一个用户。执行以下命令来创建一个名为mumiao的用户:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G wheel mumiao</span><br></pre></td></tr></table></figure><p><code>-m</code>：在创建时同时在<code>/home</code>目录下创建一个与用户名同名的文件夹，这个目录就是你的<strong>家目录</strong>啦！家目录有一个别名是<code>~</code>，你可以在任何地方使用<code>~</code>来代替家目录路径。</p><p><code>-G wheel</code>：<code>-G</code>代表把用户加入一个组.</p><p>为新用户设置一个密码，执行如下命令:</p><p>passwd mumiao</p><p><img alt="image-20201012013012718" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012013012718.png"></p><h4 id="2-4-3-配置sudo"><a href="#2-4-3-配置sudo" class="headerlink" title="2.4.3 配置sudo"></a>2.4.3 配置sudo</h4><p>现在已经创建好了一个新的用户，以后可使用这个用户来登录，那么如果需要执行一些只有<code>root</code>用户才能执行的命令（例如修改系统文件、安装软件包）时怎么办？</p><p>通过 su 命令来切换到<code>root</code>用户执行命令后再通过 exit 退回普通用户;</p><p>另一个更快捷的办法，使用<code>sudo</code>，我们只要在需要<code>root</code>权限执行的命令之前加上<code>sudo</code>就可以。</p><p><code>sudo</code>本身也是一个软件包，所以我们需要通过<code>pacman</code>来安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S sudo</span><br></pre></td></tr></table></figure><p><img alt="image-20201012020539849" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012020539849.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br></pre></td></tr></table></figure><p>找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># %wheel ALL=(ALL)ALL</span><br></pre></td></tr></table></figure><p>这行，去掉之前的<code>#</code>注释符，保存并退出.</p><p>这里的<code>%wheel</code>就是代表<code>wheel</code>组，意味着<code>wheel</code>组中的所有用户都可以使用<code>sudo</code>命令。</p><p><img alt="image-20201012020755083" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012020755083.png"></p><h4 id="2-4-4-安装Xorg"><a href="#2-4-4-安装Xorg" class="headerlink" title="2.4.4 安装Xorg"></a>2.4.4 安装Xorg</h4><p><code>Xorg</code>是<code>Linux</code>下的一个著名的开源图形服务，我们的桌面环境需要<code>Xorg</code>的支持。</p><p>执行如下命令安装<code>Xorg</code>及相关组件：</p><p>sudo pacman -S xorg</p><p><img alt="image-20201012022051709" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012022051709.png"></p><h4 id="2-4-5-安装桌面环境"><a href="#2-4-5-安装桌面环境" class="headerlink" title="2.4.5 安装桌面环境"></a>2.4.5 安装桌面环境</h4><p><code>Linux</code>下有很多著名的桌面环境如<code>Xfce</code>、<code>KDE(Plasma)</code>、<code>Gnome</code>、<code>Unity</code>、<code>Deepin</code>等等</p><p>我选择的是<code>Xfce</code>和非常流行的<code>KDE(Plasma)</code></p><p><img alt="image-20201012022505849" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012022505849.png"></p><h4 id="2-4-6-安装桌面管理器"><a href="#2-4-6-安装桌面管理器" class="headerlink" title="2.4.6 安装桌面管理器"></a>2.4.6 安装桌面管理器</h4><p>安装好了桌面环境包以后，我们需要安装一个图形化的桌面管理器来帮助我们登录并且选择我们使用的桌面环境，这里我选择使用<code>sddm</code></p><p>安装sddm:</p><p>pacman -S sddm</p><p><img alt="image-20201012023711692" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012023711692.png"></p><p>设置开机启动sddm服务; Arch下用于管理系统服务的命令systemctl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start   服务名 （启动一项服务）</span><br><span class="line">systemctl stop    服务名 （停止一项服务）</span><br><span class="line">systemctl enable  服务名 （开机启动一项服务）</span><br><span class="line">systemctl disable 服务名 （取消开机启动一项服务）</span><br></pre></td></tr></table></figure><p>systemctl enable sddm</p><h4 id="2-4-7-再次配置网络"><a href="#2-4-7-再次配置网络" class="headerlink" title="2.4.7 再次配置网络"></a>2.4.7 再次配置网络</h4><p>桌面环境使用的是<code>NetworkManager</code>这个网络服务,所以需要禁用自带的<code>netctl</code>并启用<code>NetworkManager</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl disable dhcpcd</span><br><span class="line">sudo systemctl enable NetworkManager</span><br></pre></td></tr></table></figure><p><img alt="image-20201012024838402" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012024838402.png"></p><p>重启</p><p><img alt="image-20201012025145446" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012025145446.png"></p><p><img alt="image-20201012025448860" data-src="https://markdownoss1.oss-cn-beijing.aliyuncs.com/img/image-20201012025448860.png"></p><h2 id="三、安装过程中的一些总结"><a href="#三、安装过程中的一些总结" class="headerlink" title="三、安装过程中的一些总结"></a>三、安装过程中的一些总结</h2><h3 id="3-1-usr路径"><a href="#3-1-usr路径" class="headerlink" title="3.1 /usr路径"></a>3.1 /usr路径</h3><p><code>/usr</code>路径: <code>/usr</code>路径也是我们比较常用的一个路径,这里的<code>usr</code>最早是<code>user</code>的缩写,但是目前我们认为它是<code>User System Resources</code>的缩写,因为其早期是作为<code>unix</code>系统中用户家目录存在的,相当于现在的<code>/home</code>目录,但如今这个路径的作用已经变更,其中通常是用户级的软件等,多是一些静态的,可多用户共享的文件。</p><h3 id="3-2-验证启动模式"><a href="#3-2-验证启动模式" class="headerlink" title="3.2 验证启动模式"></a>3.2 验证启动模式</h3><p>我们使用<code>/sys/firmware/efi/efivars</code>文件是否存在的方式来判断系统是否以<code>UEFI</code>模式启动,不同的启动模式,在后面的分区以及<code>grub</code>安装过程中会有不同.</p><p>我们常见的启动模式为<code>UEFI</code>和<code>Legacy</code>,他们都是<code>BIOS(Basic Input Output System,是个人电脑启动时加载的第一个软件)</code>,只是新和旧的两种不同的<code>BIOS</code>而已,当新的<code>BIOS</code>架构<code>UEFI</code>出现时,旧的<code>BIOS</code>便被称为<code>Legacy</code><br> 两个模式不止启动方式不同,对应的磁盘格式也不同:<code>UEFI</code>对应<code>GPT</code>格式,而<code>Legacy</code>对应<code>MBR</code>格式.混淆格式,系统将不能正常启动,我们在安装系统时,有时就需要使用分区工具转化磁盘格式为启动方式对应的格式。</p><h3 id="3-3-连接到因特网"><a href="#3-3-连接到因特网" class="headerlink" title="3.3 连接到因特网"></a>3.3 连接到因特网</h3><blockquote><p><strong>守护进程(<code>daemon</code>)</strong>:  在一个多任务的计算机操作系统中，<strong>守护进程</strong>是一种在后台执行的计算机程序。此类程序会被以进程的形式初始化。守护进程程序的名称通常以字母“d”结尾,在我们系统启动时,很多守护进程便一起启动,为我们做好开机前的配置.</p></blockquote><blockquote><p><strong>dhcpcd</strong>: 全称为<code>dhcp client daemon</code>,用来配置<code>dhcp</code>(动态主机设置协议)服务,我们常见的<code>dhcp</code>的作用是<strong>内部网或网络服务供应商自动分配IP地址给用户</strong>,这就省略了我们手动去配置网络信息(ip,子网掩码,网关等)的步骤,而该进程会在系统启动时帮我们启动<code>dhcp</code>服务,我们在使用过程中,也可手动的调用<code>dhcpcd</code>命令来连接有线网络</p></blockquote><h3 id="3-4-磁盘分区"><a href="#3-4-磁盘分区" class="headerlink" title="3.4 磁盘分区"></a>3.4 磁盘分区</h3><p><strong>磁盘分区</strong> : 磁盘分区的好处有很多,如:</p><ol><li>我们在使用一块磁盘时,不一定只使用一种文件系统,不同分区可以格式化为不同的文件系统;</li><li>分区有利于管理设备,系统一般单独放一个区，这样由于系统区只放系统，其他区不会受到系统盘出现磁盘碎片的性能影响;</li><li>如果一个分区出现逻辑损坏，仅损坏的分区而不是整个硬盘受影响.</li></ol><p><strong>交换分区(swap)</strong> :<code>swap</code>分区是类似于虚拟内存的一个手段,用来解决设备内存不够用的情况,它将磁盘的一部分空间用做存储空间,当系统的内存不够时,将内存中一部分暂时不用的进程数据存档到磁盘中,将内存腾出给正在运行的进程使用。<br> 在以前的系统分区方案中,交换空间是必须的两个分区之一(另一个是根分区,但假如我们如果使用<code>uefi</code>的启动方式,我们还需要一个<code>efi</code>分区),而现在我们可以根据自己的系统内存够不够用来决定是否添加交换分区。</p><p><strong>/dev目录</strong>: 该目录是<code>linux</code>的设备目录,包含了Linux系统中使用的所有外部设备,常见的有<br> <strong>/dev/hd*</strong> : IDE设备<br> <strong>/dev/sd*</strong> : SCSI设备<br> <strong>/dev/null</strong> : 空设备,它丢弃一切写入其中的数据（但报告写入操作成功）,我们通常会把不需要的数据写入其中以丢弃<br> <strong>/dev/tty*</strong> : 虚拟终端</p><h3 id="3-5-挂载"><a href="#3-5-挂载" class="headerlink" title="3.5 挂载"></a>3.5 挂载</h3><p>挂载分区是将刚才规划好的磁盘挂载到当前系统(启动盘中的安装程序)的<code>/mnt</code>目录中,借助当前系统中的各种工具来对磁盘做进一步的管理</p><ul><li><strong>挂载</strong> : 在<code>linux</code>上,要使用一个文件,必须对包含它的文件系统进行挂载的操作,在计算机启动时,系统已经自动的挂载了我们设定好的文件系统,但当我们接入新的文件设备,如插入一个U盘时,我们就得手动进行挂载操作(很多图形化界面都带有自动挂载的功能,不需要手动挂载)</li><li><strong>/mnt</strong> :  <code>mount</code>的简写,专门用来作为挂载点</li></ul><p><strong>引导程序</strong> : 在系统启动时,最先启动的是<code>BIOS</code>,它寻找到我们的可启动设备之后,就将控制权交给<strong>引导程序</strong>,引导程序帮我们<strong>查找并打开设备中的操作系统</strong>,<code>grub</code>是我们<code>linux</code>中最常用的引导程序；<br> 在最开始的时候,引导程序位于我们硬盘的主引导记录分区(<code>MBR</code>),随着后面引导程序的越来越复杂,<code>MBP</code>中已经存储不下,如今的系统将<code>MBR</code>中的引导程序作为第一段引导程序,该引导会去找到并启动第二段引导程序,也就是我们常见的<code>grub</code>等引导程序。</p>]]></content>
      
      
      <categories>
          
          <category> 实验笔记 </category>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arch_Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day0</title>
      <link href="/2020-02-02/day0/"/>
      <url>/2020-02-02/day0/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误, 请重新输入。" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码。" /><label>请输入密码。</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="b1200fa20f9abd9a7250987c348cd18a338585dc4900febc9b6fc2b309e3a6b1">7bc7a8ffa742732895bc7510e69fc2936ca70b4629060772555d47f424cc0e7d22afa9d943fdaf9e5494faf31f223074ef92683687f94b26a2ff8e00661452aa1567411eda06b0f70d333f1ffe12cf78391268d9b9a8caabe79941494523482c024e0856c474eb97ce22c4d6af54f645e0b2c54e9ea9b71be8892b850a152b22beb3384be8a042a42e2b47665bd3809288463ccd2145c4ecfad21073a34dcf79dd449f099dcc0eac5bc3c2bd67791b4e9ff35fea13a274c80e553da6596645bd87184b5c86697286b4926e1fe0ec40d48a203567552c43983c0cb70b6228ad70cbff0e00e2941287a64b22f85f1175c2acfa78ff522433b8f4115eb675d12e8ff4a968b6e1775d23dc02b3c2d32e29c3d28993684737c9e786e662289f044d8df7a732e1aea8a3deac2f8afbe1c9763e293a6c73839e5d4824ef94cc5900f900c43e6ddc965b441ee5c7dc52d5eefbc5c8be72bcae7487131ae7c3c063c276f43d77941f94c330067286d89df91f6bfc13880f7bdb971d0908f84ed02a47548498ec3b4fd1e76937ea9645e8125c7c9d021b1ed36acd3e05346194ea72a422ba3bfc5113a4662c7750c2723c0a8e931f2484455be4f154428437a559fd6f91a712630e990fa2c3e1d78761b835f427bcbc9121330295b57a2debfd21f3e87a3c07ed9d9bd1118748b92234b35c95a07a407ffae632fb2b05d1fbf12715806d3e311f69961cb9a5e4745200ec8971828133f5afb4f099a2f5e13ab930c9dad3050719c558e71194129e4d87b41b4089934bad93165a3e745864a9fea7ffd518b21b946f7cc527619a1846ee9299a09b476c2fbd17c4b60ddb171192d92a9a3ca71f8d8570fadd37c789753ec87971a159d3ebea62165d77d7ee4982e6f1b22512bcc81b4b249c56436faa466c3922692ebe71cdac85ef7ea3c205b61228b0fc9cd9c0fc8e12c79438bc32faffaa90f98a7fac03a29c8fa3f8575c93ce6e26849783f162b2dcdd124f8bcad1bc6f6d26c798e78a11d479de5f2f2001a6e9f09005bda88ab9ee387b8c825ed5b4f4df684400b66708780f7b4b6c606f0bcb479559a4b9bfd4eda55b853e56a73fdeb7d8170b27bdec8e4e42434225c8be5c75af788fa13b9564a54678a733088afe45cf79bdf16eed7bc6d8144e4dd518db5271e3614d4789f86dbd02a20baec6080d8b28121d55a46a8526c9e80e38b9acb1bafb440ea3db786670552ecbe674f337b74a583a3267b4d6eaa2cf6264d083fa6d7dd198cc44af20983df407a9d7760f2f56ce34b4d4384580fa9ced94650b55b81ba3237c0c489d9ec2845c1aa7404969c62a489dd6dc4ea512e8160bacc3df8ab9fd8b2dbd0d9aec1009f6cc2bc9d4b80392a7ae6e2951b9546a245b0741d8e0a7795e0ce95c58b5314d51e26d4b5adf42bf06a1bfb999f6084a0b96b58295a9885f231c716c95037c0c1b15ab01b81b89c15310f2aa928dd4d53e8d711ab894c003ea7d121360edddac3c13dd1e3061446f118819e94691f0d30f1a9ed48349bfec203bbbad88afa480948821c1b9b4921c5ffad664d0b8124a13d62b4813475be0bc5f156d4e3ac4af8f8a3607db83d21081cc41775fa3a2abc3353000f830eee0fcf4d1c972c6c5b8ba6a81a665f3443a29dbda1c6abd001dd8080ef0be6e4648bda2ac505bc93ac68abe4fe549f6257039bcb28958d65b7944c1022ee710f3b9e486a08f73ea799c1659e4eb139d9e1f2ad7c2a67abb6f5ec14dc0946841804d34a82da46eada6817ca15f47fe2e91c0c92beae9bfe44a0802afd63f11ef96415e2c4df155e95484019115d789d0d2a6c99e17ae52a7c80c1416c4d7e928a1f3ef85348a20ecb5eec5093fa3d16cc91ed88bdad690f6bb60b72ab264ddaf178a58b0c097dc3548afad4435eb201bf6ac5a9ab30492b08a0b9df96b303470507aae28ee657ce73890574d811cd6c298b8c53ba0546e4ca962aa2b51d114e6b1d9fd3a55241044419c5406455fc60cb87936981a03e2b982bd40a651fe6e91f122cbdbe69e6a3f16d828b3e5398a1b0653ae9c0989d655579a92457dd6aea9c955f0ac8aa8b04aaec4196c833a5791d55469769fd0f5e8961ddb815810d9538a67f235eccab434e73da72425cdcdd3637fed35ffd094facc1d4ef6e3c4d969ee1e71652f309c699470b6f9e7810ccab43eac790f0dacfcde5e68aa043184ae18541daff9089346dd98bdf074b5ac051c07a9d5142c53ad56141ad87462ff94e45681b05e61bf116eaa3a2f3091b922815e4f435df0f02cf2659c0c08fe1db7c368fe02b0595139bc4bcbdf3eb01b464c43f99255aab8d5ee0f0a6413bd8201ddcfd2a859d08392caf40b4f64de4cfd4a17d146e545f9b884cc595cb9f21fab7b91c4c276dd2174f13656524c76ec883e671172181d2503bd4e8a3f6b5b9bb2bfbbb604be98d4346a258f2da4b66052f5f1015b136545d3dbbd4680785c30fd1ee144539e41a998b5657455d084fc34f3f7ee83bb8fa3f5887e1b84f279b7cdf9f765503d0bd489205db027323e3ed2c3bdef41086f6fa67ca438cca7186d7dbdfd1a72a392333a22c613dda44a9b4a70ec816ea886327fadd120edd11341447cb9990f11ad3627ab7bf93a6bdc15a80b653c6c6c2f9534acc03a41b4ceaaebd67e9ac55cc0e5f3131cb21148e7d0ceb52cbb420c0e42f6cd40c7f10047cea864101b1411f3bfe1b55cde24c4aa348ec3f27357c4031db6f77bb1738d3cd3f7748caaa087eb532fa3b54aa51480db90fddce10c20fae60571ba8bd4a06c84d19f27747d299ac470f115174651abfa6f12d0d9f30e1dd9d1f86dc31181a845f5b99209ec2848f21fb33a0a1d490f1a5911487a9ac99c2ae1729e9a581454dffefdc2c7cf0e909cebdfff3fe94cfd4974d2b66f21b6da77050d03ef6559ddf9b1357e233c75ec8dfe7fbaa34d0e569ecf52a1b0436ad5d72c46cdb84c9997d37e84376ade57f0773fcde52dc6da37ebcf01e0830a7fc5d452d3971ecc8c72fa0c2d149fc17c3529952f5ae4c13d17a32dfd0c66032c7090a825cc695f26bcf9c5537f8dde6472908629f057384ab9fd0e9c834d0fc1b3246b20b194fd7b7a692fe4903f0de9456e8f8290e8fe6eb34f8c2083837c576115e9e6e8553284a4cb7804deb8221a5e9bab03639d3934df99c697e3e6864f10e1b400120e075571441e541a41bc16fad9c057b5989d61537a0261dae696bdf7ef9f14ad2257d420e6b503ec60a0734692b3f77403252e84060fe16de3c20c01aa3e7ccd3ea5d1720758a02efd70ddb129d092a98d1fbc6383d4bebacfc7b9db9f1e179b247374470bc7409acebc3b21cb5d0638a80beb25f89b285d576af09f923dd399b2a13e8a5958f32d6dbf4f0e353f2d62e11fe7531cc45ed92dcfd2ae9ffebb59bc0ae4acdb54c52bf46bc0cf8193e91132df9f910e59ef1aa30e089e0369288537d7a068e8f0c09c2d9a8a07648b51507a6d569e627dfb4ae1f190f8e919c1652fa62aa1ef5bd1529cb14758b52b2b43e6614267a5166a48dfbda68b3560523ef53368342c9b183e1eb64de5c520b9da4f6616f688e5d8f32d19850f7767458550b4f3b3ce43336335c3f20a72e98891e3206a68c5dd9b43c80d8ca801d59cc8458b80ea782d4571abc142c306824939a633c3b56edd234f45b15f1718fb34d9201320ef1967369bc61ace20cca982dbc07c88ab0bfc377ae5b7267b0b2527189571af6667c9925963ae83f25ce6a1dcfae3d05a30a1ce73020af780bd1faf7b306c1e1189a8b2546bff329e889e0c6c5ee9ec878a52a36ccbc0b41c91c603903537da6db9a19f9a908cf5dbf8126c29ea5673d3d0eeb2f6ac588ba4134b8de153a06ec05aff12fb8db4c408767ca66997d9986913db7410508825c04d86c1c5d5d57f047fff8bcce00646445393924939f47121424d689386ff65401ea31678f2bdf5ed9ca66de1e6de64ee272090dcdc7c7b5fe3acd1a56588b64ac228b00aee7b5fd6413d6313a70e2b03f5697d31c780637fb06589f1e6a4638cd5010dd343549c622a4232c58f55863a465109185654f54b167cc66fbbb16a45c03de8e7b568887f5503526651a14b6995ae92a87bdccc604dbb10e67921423f5773a0c8ca43fe486710f4a6bc96e5273b7d83943efb3108257fed588a70c7e1e36ae01d4f128713cfd67f3e8da45279e6f224b796820f8149ba1218c057902ec75b433ffe3129ea69616d1a1f9764985f6eb2a43809e8113ec5b0c974de9f11728efb49cff8377731493c0f9eb08a391ea61d7d2aa8649a5f500f590cda73780a4116c8101c0c48000135e9c8bc2c6e4c0afb38ef79e381da58d5c3ecec6722312f22201881507f419b40b784d0391b0d6846dfec2e048bb495a328d4f7e413458cb5d8472155fd4ab2b4b0b1cb1d10da619119e8936478211eb1a87d3c9bce01e50b32a638cb1a4bee2ef16ad0fa92c95fed82576e5afa3d72c3b0f55cafe76e05640e17b9268db7558db8283ae2342a16c97faaef700e16a3d3ec2eacd78bd0c9578def4a55756eafa4adb7bc94cd046ba97317a53a10c70f5602f6f82bc88f84e35a35ec9dd5d611bfabedbfac3cb7393d1b50e956355ddea9174164422c0f8e7b0c590fd9be7208c6f8c115bedf48a0581973ada55eabc0f5b3af0f8e8ec766045a7662a0da3753aeee9f28b68ba3727c038a542c62e657b693faee09d9c88b3d965a19e6deb3419154a50394a05e489eb29ae1e861ff114433ef10402b3052193e1f128233ee8da57e15fc57ae7671bb5d80025aef64b5fcead2a1d8fba5fbd6409e4090e17631d5209b432babc6f8cd2d9dc93f67c56338ce7eb662d5e518f2a304e8945594b4369e2de42af5fc811ae9b3340dc67704d0ee18ab7aaf0c5a8551d8c4d3c7bb686207a71e23bf1a4bc9ac99f9fc33aa413a58ed17b0c9e292935713fdece87e1998e83f4d68d127594dc3f757abff38c0aa18a5629d07d4a9c53c985b56de102fd706e3ce54f3ba43a4f721420953aa5f40d9e918280a18087ac50bfdadb23c7a8b1d1c585dbd18b746e8e2fee5c706ab9222f3afd005a39cb3a5ac888cd3808681e3979227955cca047251c2e6a7f74b21b7a6ac9f4142d9ef17c369fb3e97fb87de5cda7d8a146cbf2e2c8cf34a37ce305b2122b251c9211fabd58e50fd554bad9b396883cfbaf3845df0816893a6be9e986e277c2ac4eb8974f803616c94576c00d13f26debc3786b5545934da0c3cf6fc0dceb3b4b60b86ef95ee1cfc5356a56a2af4d253966e95d033e93ac475196b168d824c1a7b07d15a3a48867599e78ed97c530052a55395080c02b14742c0d30cd8acdb78a48b62f78f98c38580c9178d3df85054e50a8024399218a261e16b3324ecfd38ab9269501360a7f99ba1aa874386d979974424602cfe546965b551eb92ef7f4aea712d28c23f6783e7aa090c01f014da346e5bc8220405ab8596be23ab8c8879ac1f7498426d21442935f09c7b5fa6082c7c91cf33a44eb91b19e3309939f0aeb240ae965d97b467f000238adb8969ca6ac15b983eeebc38e20e2618cedf360bb9ec88802f9773d1753ef62b243a16e0399c2c6ff1007a23e91da1da74726567a6a0ab0fbce7adcf113c482cb03859e83206a92830658e8fdda8768b9c33870b70e4eb637ec750986a873aeb78001a8435813e553c9d3d63e85c735adb61f78b11d5da6a0bd9c5dbd484c119cdf6109cbd5fc7b1c396aebc89a057a3d3619e5eee02fd503b3dc9173f978c39cade0866e983d55f6054ace3f6648eaa0ddf2df272e0ea307fb848222ca920dfbbbe8dceaa6d1320e88a09444b6cce25482c0065e9da67ae7b00502fc6accd2987c20118b9754b90a8207d8ee6b4bf6ae6cf26e631329a2c512b5d514fa37157b196832d0d3a509de2ba32fa767e0c5ec98760e56c6b1d28e8a824f4e4cc28e2debb12ff6fc23a9b02d6bcbaf24bcc3d5bca2921b287877c2e9987b734b54da3be98b3e0eab740fa6cb50ed381e1f0544dc1ebda1f5def8885ac60d4c5105d236238cf79facb8e8bc14ee14d925a90fa0460f5aca1b75bfd280c756e78fea52c38a766cb531d1011b40f4624cec620baf81e3f865eb4486ffb48d628ece3a857009b2ea2d7b671544d4e9f5d54e00f06015c76103a81499c7c5d75a00324ed384da4b792bdf682a236e43f6eaea6b97727dfbaba9e7a526fdda9103532360d6d6cb5169e1e054ceed4d0a61e473e5458dc46fd0653e9f36d705627d7ad70c332f20b8fc2674aea3fe8b8668aee39d5e2e9afb229d8a979b91962a49c683736a86ac8cfec94bf96b571dda74a6a82d9e60fcd9cd8dfa32c34509e4f8923b22d52d5685085774f7ddc6a72f17715f9303eed3ad8dcdb43edf5d2401e10ab4d962dc13a16c5702bc4fe6bb4e1e91222f232936272fd9f0c7ba70f29c45122410b28e0b05995aec8d265fae910dbfd5c4b97eb8ddd05a8dfe15f223ae213f5a7c797a424c39eb18e8cf2cf5ae6b5d5489857273cd8315481822835273a3158b62a6625295595b778236b86711d334d37e09b0dade8721b6a4b0cc97f3d0801abff55820281f03633540b2783d4dcca0b9b3a2301cf20e0d7767405db5ed03f34251635f2da40139007ad6970f1fb03e312ecc66a0a7df834be9216e31174720962ff04069905fbbc240cafb9a2f1af5f012266fd4f07a48ad9323ef7f6c1135268b1f07f5e747fb75d1735ac38351929001fa0e41dc893af952adeb6d8ba271ef3d408e9c4b153699d4aa5925a05fe23249f27ee5e10342804880207c2bb285c08a5328a0040ec3361c61f7b08abb4cf5385c443ccdfedee10639c88f2cdf3ed66e86ae4fec86436571c6b802fc2c4807145067c18da1bf8395774d46fe34d5a3a2753899d287c9135192da73e65a539f6865fca45c0202bdf316fce42421afb139fb3028d75cdae001b0d5f2631b51328478391f4ae323e6cfeef4e430bbf787fb2fb22023657fcecf733beace58e549c3542701a8fcbf26face074521e67735a25e292c3e48ae02847a8462a4d25a4d01f85203197e76bc09d2d4fb1f1c2621907aadc911f49773f58d3ba5c7d2f49840f518bcda1fed4cb314cd0e67fad31f0ddb2a4e1c6172dd6a50924be1737e39c6028e90b4cbfacc9f9ff96a3e19089d10dfe7eaffb5b952445aebcb28f3c89a127f624e028d5db31afe5c09587326f2a45778cf1068dfbeac7feb608527ac8852621474e564c31e793377060a67380992d0b608fbdf48af08e7478eff3bdd2308e8adbccbcd8b5129de8847488cf5af18696a3fa3ce85ddf7b5b781786dcbbbd0893a09b19c0507376502575575d0b9d31b5190ac526ca7ebb8af5860c72b12d08a2026598a6034ef8dc0c8ab6f01a2968cb676f147689de8ba9d93dcdcfdcd5b315dea409ca8e1f0dcbe53bb35d458a483e2e2cd83e3c4a2a2dcf868139c36babccf7b525090d4915b6368715636745145d8e14ad489d803f37fb1f1c02b9368e3694fe1b35d80047b83ef41336ac34f69887a1a0fd3cbb71965d15a422b06efb4834205a281993112580c02e2df6a9b2dd2f600b57b8a9fba046cbb4219b6009df0c9ab5d79a521e0acaa4d31e96b2</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 实验笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Why</title>
      <link href="/2019-11-22/why/"/>
      <url>/2019-11-22/why/</url>
      
        <content type="html"><![CDATA[<h3 id="第一篇，这个博客的用处。"><a href="#第一篇，这个博客的用处。" class="headerlink" title="第一篇，这个博客的用处。"></a>第一篇，这个博客的用处。</h3><blockquote><p>94%的人认为自己分享信息会对他人有用，却只有32%的人愿意主动分享。大部分的我们，都是消极的信息消费者。 &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;  &nbsp;  &nbsp;  ——《纽约时报》社会分享行为调查</p></blockquote><a id="more"></a><p>我有随便写写的习惯，当然不能称之为文章，更多的是生活的琐事，一点小牢骚。通常我写在腾讯微博上，一个已经死掉的产品，用来随便写写再好不过了，没什么人用，更没人看，你几乎可以把它当作日记本来用。当然我没有写日记的习惯，我只是什么时候想写了就写一两句，大多数是情绪不好的时候——高兴的时候是不会想到的，用文字来发泄郁闷的心情。  <br> </p><p>不过腾讯微博已经好几年没人维护了，我感觉说不定哪天就没了，曾想过建一个个人的小站，但是买了主机域名之后又懒的搞了。今天无聊输了自己的域名访问了一下竟然是一个色情网站，可能是被劫持了吧，把域名解析都删掉懒得再折腾了。 <br></p><p>现在我选择在Github上搭建个人博客，也能学习一下Github的使用方法。 <br>  <br> </p><p>除了一些生活琐事，也发一些自己学习过程的记录，当然更想写一些有技术有价值的文章 ，希望自己能快快成长，多多沉淀，尽力去分享、去输出。不再只是单纯的<strong><em>信息消费者</em></strong>。 <br> </p><p>总的来说这大概就是这个博客的用处了，写不了什么有深度的文章，一些胡言乱语和小牢骚。 </p>]]></content>
      
      
      <categories>
          
          <category> 胡言醉语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Why </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LOVESICK</title>
      <link href="/2015-06-13/lovesick/"/>
      <url>/2015-06-13/lovesick/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误, 请重新输入。" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码。" /><label>请输入密码。</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="833d04f3709acc2439b9b6eb27b063da83c870d2d27818171ed4af75883adb38">d696345338ccdc136e191a467c81febd1600d5fdc0c71901279d666d8e5061e0fa0c14444ab71734575f099bb6c9261999be15c2c84f1746e07f9f55dc2c9654f7622a2b6246c6cf5b05cac125309dd896f2e36c27c5e0a3b57e795e4957200be1f8731bc7aab7ac98f455ee6192490520719bc027c1ff7932c69e6ea0ae9edf0ca046e3e978a49d334b4a97d151dfe79429cc039527bf940179780e38a1b7355dbbb44b53289c1b48cca8ddc14d5ca277655b2c60647f69c1798655e33299cca947ec794aa5d421c9a0280945454004c15fb7fbb5e57636043b7028f8e563a359622b5cedcaabce5e2caae816dba8989ac9441052cf17b34c068ba649f983263566a86f2189b206ba6f8be5e68ada12f02bf595dce7c5be0c67f530679919fb81bf59a521c52d231d449f0d59855228ed26f962cc0a79bc07ff2cd3a620f1354e2c75ba4b40929a8db7c3710be3dc9a15d5ceb585fd3a2aa3fd5761ee54c9fff819b7c9e2a562bfaf2f27ed6bf644c3cd8a81e4c6fc11a75e42d27b8ac27c9e4925d9ebd8e5f7edad385267effcbabc</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 胡言醉语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> versemonger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Encounter</title>
      <link href="/2014-12-21/encounter/"/>
      <url>/2014-12-21/encounter/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误, 请重新输入。" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码。" /><label>请输入密码。</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="3ba8d1603db3930ef3106c04731c37c35791d6becb60b1edb7bf5322e0aac78d">1cb7095aef8cba0308968d1e634c742afa368725409e47691f5c62c3cf328303af76e6792f2096c38720bc30aecb560ac2a70b94af782c10bc77faae6c521ee38a4c2cac9b7bfb11d3a1ba45c5d0fedc8aae3f46ebf8c4300f546c011e0c23cb19e19b5e1f3175abd1a56d5e579125607626ea04931da3646484b49fcaab7bb1edabeda41986127b3f3701e9935c01ec5c6f908827a33683a9d9c5af42e26ba90311d00b393e1221aecb179b74e7d208a9294d87e5843c315dd36d2134d542e487dd38fe14d401537272f6fc2dc10203fb5d92ace862d0d7405d4a4be20818510d8a673b8ae36c4ff04feb4d04b170d225fd4353b4205d003bffeaa53182a4f22ff40c9000507ba4dc1faddde51fbfe167c537aaaff48aefdaae7aea5df1dea0c11a6187858da6677127aa8d549c3ee31c28a8f415c04bac8cc9541572ebca2ade876fa6a53afdac174782026f89ee777335c7fdf495390cd4a70dd0631cc47867abf98c9e96c148c2ef08925bff305f523de11914926e979b71d3bb15c620e165727f9058da2078b082faaf0ed44402f2795a997415abcfdd5dd02f7142ac8d1a88b643d6cfb8cc52042c007ff83a62973c75e9af5454249c3634a02f75a9034b3e2ac9a6f66b086316f00baca6437d9a89559d212f03d6db588ef7baf394dbf563807524da8add07557fa38057333a3f6d9eca6788e5c58c30849f4c5a7819a9dbb50931d6415be1cd865714acd33f5618e33f6c7b088b43a972924bf37d02ddbb4dc7c8c1c5ab406e38dda634e197bc1082c1a064e03d4a38dcc9d3dccd8bb6a50faf9ca5a7acae809a5ddc0abc1abb9959f1a0a553fe190c2bc7cafb441d7a14a63df6726a95b3ad41465059e93e2700bb747875dd5e4598faa4f249b165378acd1ba43c5d210a90d608b41ed7be</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 胡言醉语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 寒 </tag>
            
            <tag> versemonger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A dream</title>
      <link href="/2014-12-19/a-dream/"/>
      <url>/2014-12-19/a-dream/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误, 请重新输入。" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码。" /><label>请输入密码。</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="95d2f3de961d18de364ce2ae094187e761548cf0a84778650f91ed99b662c7e5">1f1ff37a7505f347361b2fe8b4a2aeb90b4b21e714d8bc37d3468c0c6504794ed4880927e0ae94197c30755ea1ba204dee2f80df077c72666db19766224ac4c05fb4c36a2e966c02343f914824277e16fa37f2cc993e384a934f854c61bc90a159a5af3e8523d68cc543cc25777dd186e1eb0b90a66cd88e1870f29e0c05fd6d1a87f8949a8cd426e5cb03a7c5049d02f49478c8ba88e5b98ab643223705884a4e502bf27f9089a994c583cd7a877442e9f8332aec0b885b78934f28fb17a39deb6ce070243fb53904935faa547eb13c0819c936280364fe99cc6d0a94b080d92ee6fe7d7ecd3c3ad42ca9c075dd609fa2a5f6fad9675f386a9b1d34196630a4c1479c6fd834e825881732e58e57e852db234cbbb7143a5b06863d9c07695429aab518c5b16e4104a2750250b06175d197a2e1f9bac68fdde34c7420c521243010e1b02d25e840d7c0e638af1448f75f9f11c270989d76757fbac274582d3a325feadac5ab5b35d17384e4aaf0517a856e1f40387b87810a804a4ec16506a7fbb6439c3228ce009dcd2e70eb1ab7a6e649827d396b6a503117430b1e4ef3615c9d7f504a3048df12c99d85ee73093d9962e93c9352ba780f77d0ed62063d1957589dec71d831fb556f00b7385d9657aa9e70c544cb3c0887232b745e9f76c5aa1b6451d6fc133166ed31c541b622b6742cd5bb7a0592a1f2410b2e79d3c0db5a02e40aa4a9463ed6df7852b18feac6e66b3e94dd57c1c2a051ed2bef50e44ef444a8aa0e715754d44ddd16fa868da342d6200e7284b78d73373d722ea27e8d4fdb9de517bd7cd4df1d35d1b368ed18b80bfc23082fd5dbf4c095056d99f498d0486b3f5b28f27c4c5f5c501ce87010d03458484fea796b04cecfae39248b1a9c6536641a554d632fdcf1a724f1ccd64ef0b02598a5d44f00556ede040cb20ce02ba3e92d7fc40e6ec46dfc1755dff79af764ee20ca9547636e38645a8d79148a61f69e2f2f44dc16dd993b1e4d09bfcb699212ec4991cc50f5d186299832919a11cf16e31a77e2d86f513a11c200f088a1aad67d1e9cbe74a006268ed1833a9aeb71d3cb36c82b5e653e46786c45feef1eccf663056bd4fd4d58be6c9f1be14f1f51ebd3c43e8eba92a81a6d22d0547114018acc8181f563b21c6476239bcccecc4c29afd940d02cec0fece9dc541931</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 胡言醉语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> versemonger </tag>
            
            <tag> 梦 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/1019-09-22/hello-world/"/>
      <url>/1019-09-22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h2 id="Hexo指令（hexo官方文档）"><a href="#Hexo指令（hexo官方文档）" class="headerlink" title="Hexo指令（hexo官方文档）"></a>Hexo指令（<a href="https://hexo.bootcss.com/docs/commands.html" target="_blank" rel="noopener">hexo官方文档</a>）</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.bootcss.com/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"post title with whitespace"</span></span><br></pre></td></tr></table></figure><p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page --path about/me <span class="string">"About me"</span></span><br></pre></td></tr></table></figure><p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>生成静态文件，该命令可以简写为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>启动服务器，该命令可以简写为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>该命令可以简写为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
